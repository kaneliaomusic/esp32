/*
  ESP32-S3 OLED Text Display from Serial Input

  Reads a serial input string until a newline, then displays the string
  centered on an SSD1306 OLED display (128x64).

  Requirements:
  - ESP32-S3 board
  - SSD1306 OLED display (I2C, 128x64)
  - Adafruit_SSD1306 and Adafruit_GFX libraries

  Connections:
  - OLED SDA -> ESP32-S3 GPIO 5
  - OLED SCL -> ESP32-S3 GPIO 6
  - OLED VCC -> 3.3V
  - OLED GND -> GND

  Based on String to Integer example by Tom Igoe
  Modified for ESP32-S3 and OLED display
*/

#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

// OLED display settings
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET -1  // Reset pin not used
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

// I2C pins for ESP32-S3
#define I2C_SDA 5
#define I2C_SCL 6

// Serial input string
String inString = "";

void setup() {
  // Initialize serial communication
  Serial.begin(115200);
  while (!Serial) {
    ;  // Wait for serial port to connect
  }

  // Initialize I2C with custom pins
  Wire.begin(I2C_SDA, I2C_SCL);

  // Initialize OLED display
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {  // I2C address 0x3C
    Serial.println(F("SSD1306 allocation failed"));
    for (;;);  // Halt if display fails
  }

  // Clear display and set text properties
  display.clearDisplay();
  display.setTextSize(1);      // Normal 1:1 pixel scale
  display.setTextColor(SSD1306_WHITE);  // White text
  display.setTextWrap(false);  // Disable text wrap
  display.display();

  // Send intro message
  Serial.println("\n\nESP32-S3 OLED Serial Input Display");
  Serial.println("Enter text and press Enter to display on OLED");
}

void loop() {
  // Read serial input
  while (Serial.available() > 0) {
    char inChar = (char)Serial.read();
    if (inChar != '\n') {
      // Add character to string
      inString += inChar;
    } else {
      // Newline received, display the string
      Serial.print("Received: ");
      Serial.println(inString);

      // Clear display
      display.clearDisplay();

      // Calculate text position to center it
      int16_t x1, y1;
      uint16_t w, h;
      display.setTextSize(1);  // Reset text size
      display.getTextBounds(inString, 0, 0, &x1, &y1, &w, &h);  // Get text dimensions
      int x = (SCREEN_WIDTH - w) / 2;  // Center horizontally
      int y = (SCREEN_HEIGHT - h) / 2; // Center vertically

      // Set cursor and print text
      display.setCursor(x, y);
      display.print(inString);

      // Update display
      display.display();

      // Clear string for new input
      inString = "";
    }
  }
}
